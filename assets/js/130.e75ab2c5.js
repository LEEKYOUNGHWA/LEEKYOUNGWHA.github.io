(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{641:function(a,t,_){"use strict";_.r(t);var r=_(2),v=Object(r.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"dart-interview-예상-질문-100개"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dart-interview-예상-질문-100개"}},[a._v("#")]),a._v(" Dart interview 예상 질문 100개")]),a._v(" "),t("TTSButton"),a._v(" "),t("h2",{attrs:{id:"_1-dart의-주요-특징은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-dart의-주요-특징은-무엇인가요"}},[a._v("#")]),a._v(" 1. Dart의 주요 특징은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[a._v("Dart는 객체 지향 언어로, JIT(Just-In-Time) 및 AOT(Ahead-Of-Time) 컴파일을 지원합니다. 강력한 타입 시스템을 제공하며, Flutter에서 주로 사용됩니다.")])]),a._v(" "),t("h2",{attrs:{id:"_2-dart에서-var와-dynamic의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-dart에서-var와-dynamic의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 2. Dart에서 "),t("code",[a._v("var")]),a._v("와 "),t("code",[a._v("dynamic")]),a._v("의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("var")]),a._v("는 타입 추론을 통해 변수를 선언하며, 한번 지정된 타입을 변경할 수 없습니다.")]),a._v(" "),t("li",[t("code",[a._v("dynamic")]),a._v("은 런타임에 타입을 결정하며, 타입 변경이 가능합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_3-dart에서-final과-const의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-dart에서-final과-const의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 3. Dart에서 "),t("code",[a._v("final")]),a._v("과 "),t("code",[a._v("const")]),a._v("의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("final")]),a._v("은 변수에 한 번만 값을 할당할 수 있으며, 런타임에 값이 결정됩니다.")]),a._v(" "),t("li",[t("code",[a._v("const")]),a._v("는 컴파일 타임에 값이 결정되며, 불변의 상수 값을 나타냅니다.")])]),a._v(" "),t("h2",{attrs:{id:"_4-dart에서-future는-무엇이고-어떻게-사용하나요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-dart에서-future는-무엇이고-어떻게-사용하나요"}},[a._v("#")]),a._v(" 4. Dart에서 "),t("code",[a._v("Future")]),a._v("는 무엇이고 어떻게 사용하나요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("Future")]),a._v("는 비동기 작업의 결과를 나타내는 객체로, 비동기 코드에서 값이 나중에 반환될 것을 나타냅니다. "),t("code",[a._v("async")]),a._v("/"),t("code",[a._v("await")]),a._v(" 키워드를 통해 비동기 작업을 처리할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_5-dart에서-stream과-future의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-dart에서-stream과-future의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 5. Dart에서 "),t("code",[a._v("Stream")]),a._v("과 "),t("code",[a._v("Future")]),a._v("의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("Future")]),a._v("는 하나의 값이 비동기적으로 반환되는 경우에 사용됩니다.")]),a._v(" "),t("li",[t("code",[a._v("Stream")]),a._v("은 여러 개의 값이 비동기적으로 발생하는 경우에 사용됩니다. "),t("code",[a._v("await for")]),a._v("를 사용하여 스트림의 값을 처리할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_6-dart에서-async와-await의-역할은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-dart에서-async와-await의-역할은-무엇인가요"}},[a._v("#")]),a._v(" 6. Dart에서 "),t("code",[a._v("async")]),a._v("와 "),t("code",[a._v("await")]),a._v("의 역할은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("async")]),a._v("는 비동기 함수를 정의하며, "),t("code",[a._v("await")]),a._v("는 비동기 함수의 결과가 반환될 때까지 기다립니다. 이를 통해 비동기 작업을 동기처럼 작성할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_7-dart에서-null-safety란-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-dart에서-null-safety란-무엇인가요"}},[a._v("#")]),a._v(" 7. Dart에서 "),t("code",[a._v("null safety")]),a._v("란 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("null safety")]),a._v("는 변수에 "),t("code",[a._v("null")]),a._v(" 값이 할당되지 않도록 보장하는 기능입니다. 이를 통해 "),t("code",[a._v("null")]),a._v("로 인한 런타임 오류를 예방할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_8-dart에서-cascade-notation을-설명해주세요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-dart에서-cascade-notation을-설명해주세요"}},[a._v("#")]),a._v(" 8. Dart에서 "),t("code",[a._v("cascade notation")]),a._v("을 설명해주세요.")]),a._v(" "),t("ul",[t("li",[a._v("Cascade notation("),t("code",[a._v("..")]),a._v(")은 객체의 여러 속성이나 메서드를 체이닝하여 호출할 수 있는 기능입니다. 이를 통해 코드의 가독성과 간결성을 높일 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_9-dart에서-mixin을-사용하는-이유와-예시를-보여주세요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-dart에서-mixin을-사용하는-이유와-예시를-보여주세요"}},[a._v("#")]),a._v(" 9. Dart에서 "),t("code",[a._v("mixin")]),a._v("을 사용하는 이유와 예시를 보여주세요.")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("mixin")]),a._v("은 클래스에 다른 기능을 추가할 수 있는 기능입니다. 다중 상속이 불가능한 Dart에서 재사용 가능한 코드를 클래스에 결합할 수 있도록 합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_10-dart에서-is-연산자와-as-연산자의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-dart에서-is-연산자와-as-연산자의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 10. Dart에서 "),t("code",[a._v("is")]),a._v(" 연산자와 "),t("code",[a._v("as")]),a._v(" 연산자의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("is")]),a._v("는 객체가 특정 타입인지 확인하는 데 사용됩니다.")]),a._v(" "),t("li",[t("code",[a._v("as")]),a._v("는 객체를 특정 타입으로 강제 형변환할 때 사용됩니다.")])]),a._v(" "),t("h2",{attrs:{id:"_11-dart에서-set과-list의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_11-dart에서-set과-list의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 11. Dart에서 "),t("code",[a._v("Set")]),a._v("과 "),t("code",[a._v("List")]),a._v("의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("Set")]),a._v("은 중복된 값을 허용하지 않는 컬렉션입니다.")]),a._v(" "),t("li",[t("code",[a._v("List")]),a._v("는 순서가 있는 컬렉션으로, 중복된 값을 허용합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_12-dart에서-factory-constructor란-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_12-dart에서-factory-constructor란-무엇인가요"}},[a._v("#")]),a._v(" 12. Dart에서 "),t("code",[a._v("factory constructor")]),a._v("란 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("factory constructor")]),a._v("는 클래스의 인스턴스를 반환하는 생성자로, 새로운 인스턴스를 생성하지 않고 기존 객체를 반환하거나 다른 생성자를 호출할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_13-dart에서-streamcontroller는-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_13-dart에서-streamcontroller는-무엇인가요"}},[a._v("#")]),a._v(" 13. Dart에서 "),t("code",[a._v("StreamController")]),a._v("는 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("StreamController")]),a._v("는 "),t("code",[a._v("Stream")]),a._v("을 생성하고 이벤트를 추가하는 역할을 합니다. 이벤트를 "),t("code",[a._v("sink")]),a._v("에 추가하여 스트림에 데이터를 전달할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_14-dart에서-late-키워드의-역할은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_14-dart에서-late-키워드의-역할은-무엇인가요"}},[a._v("#")]),a._v(" 14. Dart에서 "),t("code",[a._v("late")]),a._v(" 키워드의 역할은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("late")]),a._v("는 변수가 나중에 초기화될 것임을 나타내는 키워드입니다. "),t("code",[a._v("null safety")]),a._v("와 함께 사용되어, 변수 초기화가 지연됨을 컴파일러에게 알립니다.")])]),a._v(" "),t("h2",{attrs:{id:"_15-dart에서-typedef의-용도는-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_15-dart에서-typedef의-용도는-무엇인가요"}},[a._v("#")]),a._v(" 15. Dart에서 "),t("code",[a._v("typedef")]),a._v("의 용도는 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("typedef")]),a._v("는 함수 타입을 별칭으로 정의할 때 사용됩니다. 이를 통해 함수 타입의 이름을 정의하고, 함수 타입을 간결하게 표현할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_16-dart에서-extension을-사용하여-클래스에-기능을-추가하는-방법은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_16-dart에서-extension을-사용하여-클래스에-기능을-추가하는-방법은-무엇인가요"}},[a._v("#")]),a._v(" 16. Dart에서 "),t("code",[a._v("extension")]),a._v("을 사용하여 클래스에 기능을 추가하는 방법은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("extension")]),a._v("을 사용하면 기존 클래스에 새로운 메서드를 추가할 수 있습니다. 이를 통해 클래스를 수정하지 않고도 새로운 기능을 확장할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_17-dart에서-null-aware-operator는-어떻게-사용되나요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-dart에서-null-aware-operator는-어떻게-사용되나요"}},[a._v("#")]),a._v(" 17. Dart에서 "),t("code",[a._v("null-aware operator")]),a._v("는 어떻게 사용되나요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("null-aware operator")]),a._v("("),t("code",[a._v("?.")]),a._v(", "),t("code",[a._v("??")]),a._v(")는 "),t("code",[a._v("null")]),a._v(" 값일 수 있는 객체를 안전하게 처리할 수 있도록 도와줍니다. "),t("code",[a._v("?.")]),a._v("는 객체가 "),t("code",[a._v("null")]),a._v("이 아닌 경우에만 메서드를 호출하고, "),t("code",[a._v("??")]),a._v("는 "),t("code",[a._v("null")]),a._v("일 경우 기본값을 제공할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_18-dart에서-int와-double의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_18-dart에서-int와-double의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 18. Dart에서 "),t("code",[a._v("int")]),a._v("와 "),t("code",[a._v("double")]),a._v("의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("int")]),a._v("는 정수 값을 나타내며, 소수점이 없는 숫자를 다룹니다.")]),a._v(" "),t("li",[t("code",[a._v("double")]),a._v("은 실수 값을 나타내며, 소수점을 포함한 숫자를 다룹니다.")])]),a._v(" "),t("h2",{attrs:{id:"_19-dart에서-async-와-await-는-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_19-dart에서-async-와-await-는-무엇인가요"}},[a._v("#")]),a._v(" 19. Dart에서 "),t("code",[a._v("async*")]),a._v("와 "),t("code",[a._v("await*")]),a._v("는 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("async*")]),a._v("는 비동기 제너레이터로, "),t("code",[a._v("Stream")]),a._v("을 반환하는 비동기 함수를 정의합니다.")]),a._v(" "),t("li",[t("code",[a._v("await*")]),a._v("는 비동기 제너레이터에서 값을 순차적으로 기다리며 처리할 때 사용됩니다.")])]),a._v(" "),t("h2",{attrs:{id:"_20-dart에서-assert는-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_20-dart에서-assert는-무엇인가요"}},[a._v("#")]),a._v(" 20. Dart에서 "),t("code",[a._v("assert")]),a._v("는 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("assert")]),a._v("는 디버깅 목적으로 조건이 참인지 확인하는 데 사용됩니다. 조건이 거짓일 경우 "),t("code",[a._v("AssertionError")]),a._v("가 발생합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_21-dart에서-num-타입은-무엇을-의미하나요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_21-dart에서-num-타입은-무엇을-의미하나요"}},[a._v("#")]),a._v(" 21. Dart에서 "),t("code",[a._v("num")]),a._v(" 타입은 무엇을 의미하나요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("num")]),a._v("은 "),t("code",[a._v("int")]),a._v("와 "),t("code",[a._v("double")]),a._v("의 상위 타입으로, 숫자형 데이터를 다룰 때 사용됩니다. "),t("code",[a._v("num")]),a._v("은 정수와 실수를 모두 처리할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_22-dart에서-const와-final-객체의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_22-dart에서-const와-final-객체의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 22. Dart에서 "),t("code",[a._v("const")]),a._v("와 "),t("code",[a._v("final")]),a._v(" 객체의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("final")]),a._v(" 객체는 런타임에 한 번만 값을 할당할 수 있으며, 값이 변경되지 않습니다.")]),a._v(" "),t("li",[t("code",[a._v("const")]),a._v(" 객체는 컴파일 타임에 정의된 상수 값이어야 하며, 불변입니다.")])]),a._v(" "),t("h2",{attrs:{id:"_23-dart에서-async-함수-내에서-return을-사용하면-무엇이-반환되나요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_23-dart에서-async-함수-내에서-return을-사용하면-무엇이-반환되나요"}},[a._v("#")]),a._v(" 23. Dart에서 "),t("code",[a._v("async")]),a._v(" 함수 내에서 "),t("code",[a._v("return")]),a._v("을 사용하면 무엇이 반환되나요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("async")]),a._v(" 함수 내에서 "),t("code",[a._v("return")]),a._v("은 "),t("code",[a._v("Future")]),a._v("를 반환합니다. 반환값은 "),t("code",[a._v("Future")]),a._v("의 결과로 포장됩니다.")])]),a._v(" "),t("h2",{attrs:{id:"_24-dart에서-await와-yield의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_24-dart에서-await와-yield의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 24. Dart에서 "),t("code",[a._v("await")]),a._v("와 "),t("code",[a._v("yield")]),a._v("의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("await")]),a._v("는 비동기 함수에서 결과가 반환될 때까지 기다립니다.")]),a._v(" "),t("li",[t("code",[a._v("yield")]),a._v("는 제너레이터 함수에서 값을 반환하며, 값을 반환하고 함수의 실행을 중지합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_25-dart에서-mixin과-abstract-class의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_25-dart에서-mixin과-abstract-class의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 25. Dart에서 "),t("code",[a._v("Mixin")]),a._v("과 "),t("code",[a._v("Abstract Class")]),a._v("의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("Mixin")]),a._v("은 클래스에 기능을 재사용할 수 있게 해주는 방식으로, 다중 상속을 가능하게 합니다.")]),a._v(" "),t("li",[t("code",[a._v("Abstract Class")]),a._v("는 클래스에서 상속해야 하는 메서드의 틀만 제공하고, 인스턴스를 생성할 수 없습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_26-dart에서-super-키워드를-사용하는-방법은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_26-dart에서-super-키워드를-사용하는-방법은-무엇인가요"}},[a._v("#")]),a._v(" 26. Dart에서 "),t("code",[a._v("super")]),a._v(" 키워드를 사용하는 방법은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("super")]),a._v("는 부모 클래스의 생성자나 메서드를 호출할 때 사용됩니다. 이를 통해 상속받은 클래스에서 부모 클래스의 기능을 활용할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_27-dart에서-await와-then의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_27-dart에서-await와-then의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 27. Dart에서 "),t("code",[a._v("await")]),a._v("와 "),t("code",[a._v("then")]),a._v("의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("await")]),a._v("는 비동기 코드에서 값을 기다리며 동기적인 코드처럼 작성할 수 있게 합니다.")]),a._v(" "),t("li",[t("code",[a._v("then")]),a._v("은 "),t("code",[a._v("Future")]),a._v("의 결과를 처리하는 콜백 함수를 등록하여 비동기적으로 처리합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_28-dart에서-with-키워드를-사용하는-이유는-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_28-dart에서-with-키워드를-사용하는-이유는-무엇인가요"}},[a._v("#")]),a._v(" 28. Dart에서 "),t("code",[a._v("with")]),a._v(" 키워드를 사용하는 이유는 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("with")]),a._v("는 믹스인(mixin)을 적용하여 클래스에 다른 기능을 추가할 때 사용됩니다. 이를 통해 다중 상속 없이 기능을 확장할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_29-dart에서-typedef를-사용하여-함수-타입을-정의하는-방법은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_29-dart에서-typedef를-사용하여-함수-타입을-정의하는-방법은-무엇인가요"}},[a._v("#")]),a._v(" 29. Dart에서 "),t("code",[a._v("typedef")]),a._v("를 사용하여 함수 타입을 정의하는 방법은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("typedef")]),a._v("를 사용하여 함수의 타입을 별칭으로 정의할 수 있습니다. 이를 통해 함수 타입을 좀 더 간결하게 표현할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_30-dart에서-rethrow와-throw의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_30-dart에서-rethrow와-throw의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 30. Dart에서 "),t("code",[a._v("rethrow")]),a._v("와 "),t("code",[a._v("throw")]),a._v("의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("throw")]),a._v("는 예외를 던지며, 예외를 명시적으로 발생시킬 때 사용됩니다.")]),a._v(" "),t("li",[t("code",[a._v("rethrow")]),a._v("는 현재 처리 중인 예외를 다시 던지는 데 사용되며, 예외를 더 이상 처리하지 않고 호출한 곳으로 전달합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_31-dart에서-is-연산자의-용도는-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_31-dart에서-is-연산자의-용도는-무엇인가요"}},[a._v("#")]),a._v(" 31. Dart에서 "),t("code",[a._v("is!")]),a._v(" 연산자의 용도는 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("is!")]),a._v("는 객체가 특정 타입이 아닌지 확인하는 데 사용됩니다. 예를 들어, "),t("code",[a._v("x is! String")]),a._v("은 "),t("code",[a._v("x")]),a._v("가 "),t("code",[a._v("String")]),a._v("이 아닐 경우 참을 반환합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_32-dart에서-required와-required의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_32-dart에서-required와-required의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 32. Dart에서 "),t("code",[a._v("@required")]),a._v("와 "),t("code",[a._v("required")]),a._v("의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("@required")]),a._v("는 "),t("code",[a._v("flutter")]),a._v("에서 사용되며, 필수 매개변수를 표시하는 데 사용됩니다. "),t("code",[a._v("required")]),a._v("는 Dart 2.12 이상에서 null safety와 함께 사용되며, 함수 매개변수가 필수임을 나타냅니다.")])]),a._v(" "),t("h2",{attrs:{id:"_33-dart에서-final로-선언된-변수는-언제-값을-변경할-수-있나요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_33-dart에서-final로-선언된-변수는-언제-값을-변경할-수-있나요"}},[a._v("#")]),a._v(" 33. Dart에서 "),t("code",[a._v("final")]),a._v("로 선언된 변수는 언제 값을 변경할 수 있나요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("final")]),a._v("로 선언된 변수는 한 번만 값이 할당될 수 있습니다. 그러나 값이 초기화된 후, 변수에 다시 값을 할당하려면 오류가 발생합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_34-dart에서-override-어노테이션의-역할은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_34-dart에서-override-어노테이션의-역할은-무엇인가요"}},[a._v("#")]),a._v(" 34. Dart에서 "),t("code",[a._v("@override")]),a._v(" 어노테이션의 역할은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("@override")]),a._v("는 부모 클래스의 메서드를 재정의할 때 사용하는 어노테이션입니다. 컴파일러가 메서드가 부모 클래스를 올바르게 재정의하는지 확인하도록 돕습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_35-dart에서-abstract-클래스는-무엇이며-언제-사용하나요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_35-dart에서-abstract-클래스는-무엇이며-언제-사용하나요"}},[a._v("#")]),a._v(" 35. Dart에서 "),t("code",[a._v("abstract")]),a._v(" 클래스는 무엇이며, 언제 사용하나요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("abstract")]),a._v(" 클래스는 인스턴스를 생성할 수 없는 클래스입니다. 주로 자식 클래스에서 구현해야 하는 메서드를 정의할 때 사용됩니다.")])]),a._v(" "),t("h2",{attrs:{id:"_36-dart에서-factory-constructor의-용도는-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_36-dart에서-factory-constructor의-용도는-무엇인가요"}},[a._v("#")]),a._v(" 36. Dart에서 "),t("code",[a._v("factory constructor")]),a._v("의 용도는 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("factory constructor")]),a._v("는 객체를 생성하는 데 사용되는 특별한 생성자로, 새 인스턴스를 만들지 않고 기존 인스턴스를 반환할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_37-dart에서-assert와-debugger-의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_37-dart에서-assert와-debugger-의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 37. Dart에서 "),t("code",[a._v("assert")]),a._v("와 "),t("code",[a._v("debugger()")]),a._v("의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("assert")]),a._v("는 조건이 "),t("code",[a._v("false")]),a._v("일 때 "),t("code",[a._v("AssertionError")]),a._v("를 발생시킵니다. 주로 디버깅과 테스트 용도로 사용됩니다.")]),a._v(" "),t("li",[t("code",[a._v("debugger()")]),a._v("는 코드 실행 중에 디버깅 세션을 시작하게 합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_38-dart에서-future와-stream을-혼합해서-사용할-수-있나요-예시를-들어-설명해주세요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_38-dart에서-future와-stream을-혼합해서-사용할-수-있나요-예시를-들어-설명해주세요"}},[a._v("#")]),a._v(" 38. Dart에서 "),t("code",[a._v("Future")]),a._v("와 "),t("code",[a._v("Stream")]),a._v("을 혼합해서 사용할 수 있나요? 예시를 들어 설명해주세요.")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("Future")]),a._v("와 "),t("code",[a._v("Stream")]),a._v("을 혼합할 수 있습니다. 예를 들어, "),t("code",[a._v("Future")]),a._v("로 결과를 기다린 후, 그 결과를 "),t("code",[a._v("Stream")]),a._v("으로 전달하는 방식이 가능합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_39-dart에서-spread-operator는-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_39-dart에서-spread-operator는-무엇인가요"}},[a._v("#")]),a._v(" 39. Dart에서 "),t("code",[a._v("spread operator")]),a._v("는 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("spread operator")]),a._v("("),t("code",[a._v("...")]),a._v(")는 리스트나 맵을 다른 리스트나 맵에 확장하여 추가할 때 사용됩니다. 예를 들어, "),t("code",[a._v("var newList = [...oldList];")]),a._v("는 "),t("code",[a._v("oldList")]),a._v("의 모든 요소를 "),t("code",[a._v("newList")]),a._v("에 추가합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_40-dart에서-null-aware-spread-operator는-어떻게-사용되나요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_40-dart에서-null-aware-spread-operator는-어떻게-사용되나요"}},[a._v("#")]),a._v(" 40. Dart에서 "),t("code",[a._v("null-aware spread operator")]),a._v("는 어떻게 사용되나요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("null-aware spread operator")]),a._v("("),t("code",[a._v("...?")]),a._v(")는 리스트나 맵이 "),t("code",[a._v("null")]),a._v("일 수 있는 경우, "),t("code",[a._v("null")]),a._v("이 아니면 해당 값을 확장합니다. 예를 들어, "),t("code",[a._v("var newList = [...?oldList];")]),a._v("는 "),t("code",[a._v("oldList")]),a._v("가 "),t("code",[a._v("null")]),a._v("이 아니면 확장하고, "),t("code",[a._v("null")]),a._v("이면 아무 것도 추가하지 않습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_41-dart에서-const와-final을-객체에-적용할-때-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_41-dart에서-const와-final을-객체에-적용할-때-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 41. Dart에서 "),t("code",[a._v("const")]),a._v("와 "),t("code",[a._v("final")]),a._v("을 객체에 적용할 때 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("final")]),a._v("은 객체가 한 번만 초기화될 수 있음을 보장하지만, 객체 내부의 상태는 변경할 수 있습니다. 반면, "),t("code",[a._v("const")]),a._v("는 객체 자체가 컴파일 타임에 완전히 고정되어 불변입니다.")])]),a._v(" "),t("h2",{attrs:{id:"_42-dart에서-late-변수의-용도는-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_42-dart에서-late-변수의-용도는-무엇인가요"}},[a._v("#")]),a._v(" 42. Dart에서 "),t("code",[a._v("late")]),a._v(" 변수의 용도는 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("late")]),a._v(" 키워드는 변수의 초기화를 지연시킬 수 있게 해줍니다. 이 키워드를 사용하면 "),t("code",[a._v("null safety")]),a._v("를 유지하면서도 변수의 초기화를 나중으로 미룰 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_43-dart에서-deprecated-어노테이션은-무엇을-의미하나요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_43-dart에서-deprecated-어노테이션은-무엇을-의미하나요"}},[a._v("#")]),a._v(" 43. Dart에서 "),t("code",[a._v("@deprecated")]),a._v(" 어노테이션은 무엇을 의미하나요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("@deprecated")]),a._v("는 해당 메서드나 클래스를 더 이상 사용하지 않도록 권장하는 어노테이션입니다. 주로 API 변경 시 사용됩니다.")])]),a._v(" "),t("h2",{attrs:{id:"_44-dart에서-super-키워드를-사용하여-부모-클래스의-생성자를-호출하는-방법은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_44-dart에서-super-키워드를-사용하여-부모-클래스의-생성자를-호출하는-방법은-무엇인가요"}},[a._v("#")]),a._v(" 44. Dart에서 "),t("code",[a._v("super")]),a._v(" 키워드를 사용하여 부모 클래스의 생성자를 호출하는 방법은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("super")]),a._v("는 부모 클래스의 생성자를 호출할 때 사용됩니다. 예를 들어, "),t("code",[a._v("super(param1, param2)")]),a._v("와 같이 부모 클래스의 생성자를 호출할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_45-dart에서-extension을-활용하는-방법에-대해-설명해주세요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_45-dart에서-extension을-활용하는-방법에-대해-설명해주세요"}},[a._v("#")]),a._v(" 45. Dart에서 "),t("code",[a._v("extension")]),a._v("을 활용하는 방법에 대해 설명해주세요.")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("extension")]),a._v("은 기존 클래스에 새로운 기능을 추가할 수 있는 방법입니다. 예를 들어, 기존 클래스에 새로운 메서드를 추가하고 싶을 때 유용합니다. 예시"),t("div",{staticClass:"language-dart line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dart"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extension")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("StringReversal")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("on")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("get")]),a._v(" reversed "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("split")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[a._v("''")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("reversed"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("join")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])])])]),a._v(" "),t("h2",{attrs:{id:"_46-dart에서-mixins와-extends의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_46-dart에서-mixins와-extends의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 46. Dart에서 "),t("code",[a._v("mixins")]),a._v("와 "),t("code",[a._v("extends")]),a._v("의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("mixins")]),a._v("는 클래스를 상속하지 않고 다른 클래스의 기능을 추가할 수 있게 해주는 방법입니다. "),t("code",[a._v("extends")]),a._v("는 클래스 상속을 통해 부모 클래스의 기능을 물려받는 방법입니다.")])]),a._v(" "),t("h2",{attrs:{id:"_47-dart에서-streamcontroller의-add와-adderror의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_47-dart에서-streamcontroller의-add와-adderror의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 47. Dart에서 "),t("code",[a._v("StreamController")]),a._v("의 "),t("code",[a._v("add")]),a._v("와 "),t("code",[a._v("addError")]),a._v("의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("add")]),a._v("는 스트림에 값을 추가합니다.")]),a._v(" "),t("li",[t("code",[a._v("addError")]),a._v("는 스트림에 에러를 전달합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_48-dart에서-sync-와-async-제너레이터의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_48-dart에서-sync-와-async-제너레이터의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 48. Dart에서 "),t("code",[a._v("sync*")]),a._v("와 "),t("code",[a._v("async*")]),a._v(" 제너레이터의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("sync*")]),a._v("는 동기적으로 값을 생성하는 제너레이터로, "),t("code",[a._v("Iterable")]),a._v("을 반환합니다.")]),a._v(" "),t("li",[t("code",[a._v("async*")]),a._v("는 비동기적으로 값을 생성하는 제너레이터로, "),t("code",[a._v("Stream")]),a._v("을 반환합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_49-dart에서-stream을-종료하는-방법은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_49-dart에서-stream을-종료하는-방법은-무엇인가요"}},[a._v("#")]),a._v(" 49. Dart에서 "),t("code",[a._v("Stream")]),a._v("을 종료하는 방법은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("Stream")]),a._v("을 종료하려면 "),t("code",[a._v("StreamController")]),a._v("의 "),t("code",[a._v("close()")]),a._v(" 메서드를 호출합니다. 이를 통해 스트림의 수신을 중단하고 리소스를 해제할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_50-dart에서-future-wait의-용도는-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_50-dart에서-future-wait의-용도는-무엇인가요"}},[a._v("#")]),a._v(" 50. Dart에서 "),t("code",[a._v("Future.wait")]),a._v("의 용도는 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("Future.wait")]),a._v("는 여러 비동기 작업을 병렬로 실행하고, 모든 작업이 완료될 때까지 기다립니다. 이 메서드는 여러 "),t("code",[a._v("Future")]),a._v(" 객체를 병렬로 처리할 때 유용합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_51-dart에서-function-타입을-사용할-때의-주의점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_51-dart에서-function-타입을-사용할-때의-주의점은-무엇인가요"}},[a._v("#")]),a._v(" 51. Dart에서 "),t("code",[a._v("Function")]),a._v(" 타입을 사용할 때의 주의점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("Function")]),a._v(" 타입은 모든 함수 타입을 나타내지만, 인자와 반환 타입을 명시적으로 정의하는 것이 좋습니다. 예를 들어, "),t("code",[a._v("Function(int, int) => int")]),a._v("와 같이 타입을 명확히 해주는 것이 좋습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_52-dart에서-list와-set의-주요-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_52-dart에서-list와-set의-주요-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 52. Dart에서 "),t("code",[a._v("List")]),a._v("와 "),t("code",[a._v("Set")]),a._v("의 주요 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("List")]),a._v("는 순서가 있는 컬렉션으로, 중복된 요소를 허용합니다.")]),a._v(" "),t("li",[t("code",[a._v("Set")]),a._v("은 중복된 값을 허용하지 않으며, 순서가 없습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_53-dart에서-rethrow와-throw의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_53-dart에서-rethrow와-throw의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 53. Dart에서 "),t("code",[a._v("rethrow")]),a._v("와 "),t("code",[a._v("throw")]),a._v("의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("throw")]),a._v("는 예외를 새로 던지는 데 사용되며, 사용자 정의 예외를 던질 수 있습니다.")]),a._v(" "),t("li",[t("code",[a._v("rethrow")]),a._v("는 기존 예외를 다시 던져서 예외를 상위 호출 스택으로 전달합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_54-dart에서-try-catch-블록에서-on과-catch의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_54-dart에서-try-catch-블록에서-on과-catch의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 54. Dart에서 "),t("code",[a._v("try-catch")]),a._v(" 블록에서 "),t("code",[a._v("on")]),a._v("과 "),t("code",[a._v("catch")]),a._v("의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("on")]),a._v("은 특정 타입의 예외만을 처리할 때 사용됩니다.")]),a._v(" "),t("li",[t("code",[a._v("catch")]),a._v("는 예외 타입에 관계없이 모든 예외를 처리할 때 사용됩니다.")])]),a._v(" "),t("h2",{attrs:{id:"_55-dart에서-num-타입은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_55-dart에서-num-타입은-무엇인가요"}},[a._v("#")]),a._v(" 55. Dart에서 "),t("code",[a._v("num")]),a._v(" 타입은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("num")]),a._v("은 "),t("code",[a._v("int")]),a._v("와 "),t("code",[a._v("double")]),a._v("의 상위 타입으로, 숫자형 데이터를 처리할 수 있습니다. "),t("code",[a._v("num")]),a._v(" 타입은 정수와 실수를 모두 처리할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_56-dart에서-async-함수와-일반-함수의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_56-dart에서-async-함수와-일반-함수의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 56. Dart에서 "),t("code",[a._v("async")]),a._v(" 함수와 일반 함수의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("async")]),a._v(" 함수는 비동기적으로 작업을 처리하며 "),t("code",[a._v("Future")]),a._v("를 반환합니다. 일반 함수는 동기적으로 작업을 처리하고, 값을 즉시 반환합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_57-dart에서-future-delayed의-사용-사례를-설명해주세요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_57-dart에서-future-delayed의-사용-사례를-설명해주세요"}},[a._v("#")]),a._v(" 57. Dart에서 "),t("code",[a._v("Future.delayed")]),a._v("의 사용 사례를 설명해주세요.")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("Future.delayed")]),a._v("는 지정된 시간 후에 실행되는 비동기 작업을 예약하는 데 사용됩니다. 예를 들어, "),t("code",[a._v("Future.delayed(Duration(seconds 2))")]),a._v("는 2초 후에 특정 작업을 실행합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_58-dart에서-async와-await을-사용할-때의-유의사항은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_58-dart에서-async와-await을-사용할-때의-유의사항은-무엇인가요"}},[a._v("#")]),a._v(" 58. Dart에서 "),t("code",[a._v("async")]),a._v("와 "),t("code",[a._v("await")]),a._v("을 사용할 때의 유의사항은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("async")]),a._v(" 함수는 항상 "),t("code",[a._v("Future")]),a._v("를 반환해야 하며, "),t("code",[a._v("await")]),a._v("은 "),t("code",[a._v("Future")]),a._v("가 완료될 때까지 기다리기 위해 사용됩니다.")]),a._v(" "),t("li",[t("code",[a._v("await")]),a._v("은 반드시 "),t("code",[a._v("async")]),a._v(" 함수 내에서만 사용 가능합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_59-dart에서-async-함수에서-return-값을-반환하면-무엇이-반환되나요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_59-dart에서-async-함수에서-return-값을-반환하면-무엇이-반환되나요"}},[a._v("#")]),a._v(" 59. Dart에서 "),t("code",[a._v("async")]),a._v(" 함수에서 "),t("code",[a._v("return")]),a._v(" 값을 반환하면 무엇이 반환되나요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("async")]),a._v(" 함수에서 "),t("code",[a._v("return")]),a._v("은 "),t("code",[a._v("Future")]),a._v(" 객체를 반환합니다. 반환된 값은 "),t("code",[a._v("Future")]),a._v("로 감싸져 있으며, 비동기 작업이 완료될 때 결과를 받을 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_60-dart에서-async와-await을-사용할-때의-유의사항은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_60-dart에서-async와-await을-사용할-때의-유의사항은-무엇인가요"}},[a._v("#")]),a._v(" 60. Dart에서 "),t("code",[a._v("async")]),a._v("와 "),t("code",[a._v("await")]),a._v("을 사용할 때의 유의사항은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("async")]),a._v(" 함수는 항상 "),t("code",[a._v("Future")]),a._v("를 반환하고, "),t("code",[a._v("await")]),a._v("은 해당 "),t("code",[a._v("Future")]),a._v("의 완료를 기다립니다. "),t("code",[a._v("await")]),a._v("는 반드시 "),t("code",[a._v("async")]),a._v(" 함수 내에서만 사용 가능합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_61-dart에서-const와-final의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_61-dart에서-const와-final의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 61. Dart에서 "),t("code",[a._v("const")]),a._v("와 "),t("code",[a._v("final")]),a._v("의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("const")]),a._v("는 컴파일 타임에 값이 결정되며, 변경 불가능한 상수를 정의할 때 사용됩니다.")]),a._v(" "),t("li",[t("code",[a._v("final")]),a._v("은 런타임에 값이 결정되며, 한 번만 값을 할당할 수 있는 변수입니다.")])]),a._v(" "),t("h2",{attrs:{id:"_62-dart에서-static-키워드는-무엇을-의미하나요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_62-dart에서-static-키워드는-무엇을-의미하나요"}},[a._v("#")]),a._v(" 62. Dart에서 "),t("code",[a._v("static")]),a._v(" 키워드는 무엇을 의미하나요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("static")]),a._v(" 키워드는 클래스의 인스턴스가 아니라 클래스 자체에 속하는 멤버를 정의하는 데 사용됩니다. "),t("code",[a._v("static")]),a._v(" 멤버는 객체 인스턴스를 생성하지 않고 접근할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_63-dart에서-typedef의-용도는-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_63-dart에서-typedef의-용도는-무엇인가요"}},[a._v("#")]),a._v(" 63. Dart에서 "),t("code",[a._v("typedef")]),a._v("의 용도는 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("typedef")]),a._v("는 함수 타입에 이름을 부여하는 데 사용됩니다. 이를 통해 함수 시그니처를 명확하게 정의할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_64-dart에서-iterable과-list의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_64-dart에서-iterable과-list의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 64. Dart에서 "),t("code",[a._v("Iterable")]),a._v("과 "),t("code",[a._v("List")]),a._v("의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("Iterable")]),a._v("은 순회할 수 있는 객체를 의미하며, "),t("code",[a._v("List")]),a._v("는 인덱스로 접근 가능한 배열입니다.")]),a._v(" "),t("li",[t("code",[a._v("List")]),a._v("는 "),t("code",[a._v("Iterable")]),a._v("의 서브타입입니다.")])]),a._v(" "),t("h2",{attrs:{id:"_65-dart에서-null-safety란-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_65-dart에서-null-safety란-무엇인가요"}},[a._v("#")]),a._v(" 65. Dart에서 "),t("code",[a._v("null")]),a._v(" safety란 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("null")]),a._v(" safety는 변수에 "),t("code",[a._v("null")]),a._v(" 값을 할당할 수 없도록 하는 기능으로, 코드에서 "),t("code",[a._v("null")]),a._v("로 인한 오류를 예방할 수 있습니다. "),t("code",[a._v("late")]),a._v(", "),t("code",[a._v("?")]),a._v(", "),t("code",[a._v("required")]),a._v(" 등을 사용하여 "),t("code",[a._v("null")]),a._v("을 처리할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_66-dart에서-late-키워드는-무엇을-의미하나요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_66-dart에서-late-키워드는-무엇을-의미하나요"}},[a._v("#")]),a._v(" 66. Dart에서 "),t("code",[a._v("late")]),a._v(" 키워드는 무엇을 의미하나요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("late")]),a._v(" 키워드는 변수의 값을 나중에 할당하겠다고 명시하는 키워드입니다. 변수는 선언 시 초기화되지 않지만, 실제로 사용될 때 값을 할당합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_67-dart에서-nullable-타입과-non-nullable-타입의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_67-dart에서-nullable-타입과-non-nullable-타입의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 67. Dart에서 "),t("code",[a._v("nullable")]),a._v(" 타입과 "),t("code",[a._v("non-nullable")]),a._v(" 타입의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("nullable")]),a._v(" 타입은 "),t("code",[a._v("null")]),a._v("을 허용하는 타입입니다.")]),a._v(" "),t("li",[t("code",[a._v("non-nullable")]),a._v(" 타입은 "),t("code",[a._v("null")]),a._v("을 허용하지 않는 타입입니다. Dart는 "),t("code",[a._v("null")]),a._v(" safety를 통해 이들을 구분합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_68-dart에서-future와-stream의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_68-dart에서-future와-stream의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 68. Dart에서 "),t("code",[a._v("Future")]),a._v("와 "),t("code",[a._v("Stream")]),a._v("의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("Future")]),a._v("는 하나의 값을 비동기적으로 반환하는 객체입니다.")]),a._v(" "),t("li",[t("code",[a._v("Stream")]),a._v("은 여러 값을 비동기적으로 반환하는 객체입니다.")])]),a._v(" "),t("h2",{attrs:{id:"_69-dart에서-await와-yield의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_69-dart에서-await와-yield의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 69. Dart에서 "),t("code",[a._v("await")]),a._v("와 "),t("code",[a._v("yield")]),a._v("의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("await")]),a._v("는 비동기 함수에서 비동기 작업이 완료될 때까지 기다리는 키워드입니다.")]),a._v(" "),t("li",[t("code",[a._v("yield")]),a._v("는 제너레이터 함수에서 값을 반환하는 데 사용되며, "),t("code",[a._v("Stream")]),a._v(" 또는 "),t("code",[a._v("Iterable")]),a._v("을 생성할 때 사용됩니다.")])]),a._v(" "),t("h2",{attrs:{id:"_70-dart에서-factory-키워드는-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_70-dart에서-factory-키워드는-무엇인가요"}},[a._v("#")]),a._v(" 70. Dart에서 "),t("code",[a._v("factory")]),a._v(" 키워드는 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("factory")]),a._v(" 키워드는 클래스를 생성하는 팩토리 메서드를 정의하는 데 사용됩니다. 이를 통해 객체를 반환할 때 특별한 로직을 처리하거나 캐싱할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_71-dart에서-mixins를-사용하는-이유와-그-사용법은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_71-dart에서-mixins를-사용하는-이유와-그-사용법은-무엇인가요"}},[a._v("#")]),a._v(" 71. Dart에서 "),t("code",[a._v("mixins")]),a._v("를 사용하는 이유와 그 사용법은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("mixins")]),a._v("는 여러 클래스에서 공통된 기능을 재사용하는 방법입니다. "),t("code",[a._v("with")]),a._v(" 키워드를 사용하여 클래스에 여러 "),t("code",[a._v("mixin")]),a._v("을 적용할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_72-dart에서-extension을-사용해-기존-클래스를-확장하는-방법은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_72-dart에서-extension을-사용해-기존-클래스를-확장하는-방법은-무엇인가요"}},[a._v("#")]),a._v(" 72. Dart에서 "),t("code",[a._v("extension")]),a._v("을 사용해 기존 클래스를 확장하는 방법은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("extension")]),a._v("을 사용하면 기존 클래스에 새로운 메서드나 프로퍼티를 추가할 수 있습니다. 이를 통해 클래스를 수정하지 않고도 기능을 확장할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_73-dart에서-deferred-키워드는-무엇을-의미하나요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_73-dart에서-deferred-키워드는-무엇을-의미하나요"}},[a._v("#")]),a._v(" 73. Dart에서 "),t("code",[a._v("deferred")]),a._v(" 키워드는 무엇을 의미하나요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("deferred")]),a._v(" 키워드는 코드 분할 및 지연 로딩을 위한 키워드로, 특정 라이브러리를 필요할 때까지 로드하지 않도록 할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_74-dart에서-assert-키워드를-사용하는-용도는-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_74-dart에서-assert-키워드를-사용하는-용도는-무엇인가요"}},[a._v("#")]),a._v(" 74. Dart에서 "),t("code",[a._v("assert")]),a._v(" 키워드를 사용하는 용도는 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("assert")]),a._v("는 디버깅 중에 조건이 참인지 검사하는 데 사용됩니다. 조건이 거짓일 경우 "),t("code",[a._v("AssertionError")]),a._v("가 발생합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_75-dart에서-const와-final-변수의-사용-예시를-설명해주세요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_75-dart에서-const와-final-변수의-사용-예시를-설명해주세요"}},[a._v("#")]),a._v(" 75. Dart에서 "),t("code",[a._v("const")]),a._v("와 "),t("code",[a._v("final")]),a._v(" 변수의 사용 예시를 설명해주세요.")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("const")]),a._v("는 컴파일 타임에 결정되는 상수를 선언할 때 사용합니다.")]),a._v(" "),t("li",[t("code",[a._v("final")]),a._v("은 런타임에 한 번만 값을 할당할 수 있는 변수를 선언할 때 사용합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_76-dart에서-operator를-오버로딩하는-방법은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_76-dart에서-operator를-오버로딩하는-방법은-무엇인가요"}},[a._v("#")]),a._v(" 76. Dart에서 "),t("code",[a._v("operator")]),a._v("를 오버로딩하는 방법은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[a._v("Dart에서는 "),t("code",[a._v("operator")]),a._v(" 키워드를 사용하여 연산자 오버로딩을 할 수 있습니다. 예를 들어, "),t("code",[a._v("+")]),a._v(" 연산자를 오버로딩하려면 "),t("code",[a._v("operator +(other)")]),a._v(" 형태로 정의할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_77-dart에서-bool-타입을-사용하는-예시를-들어보세요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_77-dart에서-bool-타입을-사용하는-예시를-들어보세요"}},[a._v("#")]),a._v(" 77. Dart에서 "),t("code",[a._v("bool")]),a._v(" 타입을 사용하는 예시를 들어보세요.")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("bool")]),a._v(" 타입은 참(True)과 거짓(False) 값을 나타냅니다. 예를 들어, "),t("code",[a._v("bool isActive = true;")]),a._v("와 같이 사용됩니다.")])]),a._v(" "),t("h2",{attrs:{id:"_78-dart에서-async와-await를-사용할-때-예외-처리는-어떻게-하나요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_78-dart에서-async와-await를-사용할-때-예외-처리는-어떻게-하나요"}},[a._v("#")]),a._v(" 78. Dart에서 "),t("code",[a._v("async")]),a._v("와 "),t("code",[a._v("await")]),a._v("를 사용할 때, 예외 처리는 어떻게 하나요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("async")]),a._v(" 함수 내에서 "),t("code",[a._v("await")]),a._v("을 사용하여 비동기 작업을 기다린 후 예외를 "),t("code",[a._v("try-catch")]),a._v(" 블록으로 처리할 수 있습니다.")]),a._v(" "),t("li",[t("code",[a._v("await")]),a._v("이 예외를 던지면, 이를 "),t("code",[a._v("catch")]),a._v(" 블록에서 처리할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_79-dart에서-setstate-메서드를-사용하는-이유는-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_79-dart에서-setstate-메서드를-사용하는-이유는-무엇인가요"}},[a._v("#")]),a._v(" 79. Dart에서 "),t("code",[a._v("setState()")]),a._v(" 메서드를 사용하는 이유는 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("setState()")]),a._v("는 Flutter의 상태 관리에서 사용되는 메서드로, 상태가 변경되었음을 Flutter에게 알리고 해당 위젯을 다시 렌더링합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_80-dart에서-getter와-setter는-어떻게-사용하나요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_80-dart에서-getter와-setter는-어떻게-사용하나요"}},[a._v("#")]),a._v(" 80. Dart에서 "),t("code",[a._v("getter")]),a._v("와 "),t("code",[a._v("setter")]),a._v("는 어떻게 사용하나요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("getter")]),a._v("는 객체의 속성 값을 읽을 때 사용하고, "),t("code",[a._v("setter")]),a._v("는 객체의 속성 값을 설정할 때 사용됩니다. 예를 들어, "),t("code",[a._v("String get name => _name;")]),a._v("과 "),t("code",[a._v("set name(String name) => _name = name;")]),a._v("과 같이 정의할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_81-dart에서-future-value와-stream-value의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_81-dart에서-future-value와-stream-value의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 81. Dart에서 "),t("code",[a._v("Future.value")]),a._v("와 "),t("code",[a._v("Stream.value")]),a._v("의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("Future.value")]),a._v("는 단일 값을 반환하는 "),t("code",[a._v("Future")]),a._v(" 객체를 생성합니다.")]),a._v(" "),t("li",[t("code",[a._v("Stream.value")]),a._v("는 단일 값을 반환하는 "),t("code",[a._v("Stream")]),a._v(" 객체를 생성합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_82-dart에서-function-apply-메서드는-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_82-dart에서-function-apply-메서드는-무엇인가요"}},[a._v("#")]),a._v(" 82. Dart에서 "),t("code",[a._v("Function.apply")]),a._v(" 메서드는 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("Function.apply")]),a._v("는 주어진 함수에 인자를 배열 형태로 전달하여 실행하는 메서드입니다.")])]),a._v(" "),t("h2",{attrs:{id:"_83-dart에서-void-반환-타입의-함수는-무엇을-의미하나요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_83-dart에서-void-반환-타입의-함수는-무엇을-의미하나요"}},[a._v("#")]),a._v(" 83. Dart에서 "),t("code",[a._v("void")]),a._v(" 반환 타입의 함수는 무엇을 의미하나요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("void")]),a._v("는 함수가 값을 반환하지 않음을 나타냅니다. "),t("code",[a._v("void")]),a._v(" 반환 타입을 가진 함수는 결과를 반환하지 않고 단지 작업을 수행합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_84-dart에서-default-키워드는-무엇을-의미하나요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_84-dart에서-default-키워드는-무엇을-의미하나요"}},[a._v("#")]),a._v(" 84. Dart에서 "),t("code",[a._v("default")]),a._v(" 키워드는 무엇을 의미하나요?")]),a._v(" "),t("ul",[t("li",[a._v("Dart에서 "),t("code",[a._v("default")]),a._v("는 선택적 매개변수에 기본값을 설정할 때 사용됩니다. 함수 매개변수가 제공되지 않으면 기본값을 사용합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_85-dart에서-num-타입은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_85-dart에서-num-타입은-무엇인가요"}},[a._v("#")]),a._v(" 85. Dart에서 "),t("code",[a._v("num")]),a._v(" 타입은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("num")]),a._v("은 "),t("code",[a._v("int")]),a._v("와 "),t("code",[a._v("double")]),a._v(" 타입의 상위 타입으로, 숫자 값을 처리하는 데 사용됩니다.")])]),a._v(" "),t("h2",{attrs:{id:"_86-dart에서-string의-substring-메서드는-어떻게-작동하나요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_86-dart에서-string의-substring-메서드는-어떻게-작동하나요"}},[a._v("#")]),a._v(" 86. Dart에서 "),t("code",[a._v("String")]),a._v("의 "),t("code",[a._v("substring")]),a._v(" 메서드는 어떻게 작동하나요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("substring")]),a._v("은 주어진 범위 내에서 문자열을 잘라서 반환하는 메서드입니다. 예를 들어, "),t("code",[a._v("str.substring(0, 5)")]),a._v("는 문자열의 처음 5글자를 반환합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_87-dart에서-is와-as-키워드의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_87-dart에서-is와-as-키워드의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 87. Dart에서 "),t("code",[a._v("is")]),a._v("와 "),t("code",[a._v("as")]),a._v(" 키워드의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("is")]),a._v("는 객체가 특정 타입인지 확인하는 데 사용됩니다.")]),a._v(" "),t("li",[t("code",[a._v("as")]),a._v("는 객체를 특정 타입으로 형변환하는 데 사용됩니다.")])]),a._v(" "),t("h2",{attrs:{id:"_88-dart에서-list의-map-메서드는-어떻게-사용되나요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_88-dart에서-list의-map-메서드는-어떻게-사용되나요"}},[a._v("#")]),a._v(" 88. Dart에서 "),t("code",[a._v("List")]),a._v("의 "),t("code",[a._v("map")]),a._v(" 메서드는 어떻게 사용되나요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("map")]),a._v(" 메서드는 각 항목에 대해 주어진 함수를 적용하여 새로운 리스트를 반환합니다. 예 "),t("code",[a._v("List<int> numbers = [1, 2, 3]; var doubled = numbers.map((n) => n * 2);")])])]),a._v(" "),t("h2",{attrs:{id:"_89-dart에서-set과-map의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_89-dart에서-set과-map의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 89. Dart에서 "),t("code",[a._v("Set")]),a._v("과 "),t("code",[a._v("Map")]),a._v("의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("Set")]),a._v("은 중복을 허용하지 않는 집합입니다.")]),a._v(" "),t("li",[t("code",[a._v("Map")]),a._v("은 키-값 쌍을 저장하는 데이터 구조입니다.")])]),a._v(" "),t("h2",{attrs:{id:"_90-dart에서-for-in과-foreach의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_90-dart에서-for-in과-foreach의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 90. Dart에서 "),t("code",[a._v("for-in")]),a._v("과 "),t("code",[a._v("forEach")]),a._v("의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("for-in")]),a._v("은 컬렉션의 각 항목을 순차적으로 반복합니다.")]),a._v(" "),t("li",[t("code",[a._v("forEach")]),a._v("는 컬렉션의 각 항목에 대해 제공된 콜백 함수를 실행합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_91-dart에서-await을-사용하지-않고-future를-반환하는-방법은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_91-dart에서-await을-사용하지-않고-future를-반환하는-방법은-무엇인가요"}},[a._v("#")]),a._v(" 91. Dart에서 "),t("code",[a._v("await")]),a._v("을 사용하지 않고 "),t("code",[a._v("Future")]),a._v("를 반환하는 방법은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("async")]),a._v(" 함수에서 "),t("code",[a._v("await")]),a._v("을 사용하지 않고 "),t("code",[a._v("Future")]),a._v("를 반환하려면, "),t("code",[a._v("Future.value()")]),a._v("나 "),t("code",[a._v("Future.delayed()")]),a._v(" 등을 사용할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_92-dart에서-rethrow와-throw의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_92-dart에서-rethrow와-throw의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 92. Dart에서 "),t("code",[a._v("rethrow")]),a._v("와 "),t("code",[a._v("throw")]),a._v("의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("throw")]),a._v("는 새로운 예외를 던질 때 사용되며, "),t("code",[a._v("rethrow")]),a._v("는 이미 발생한 예외를 다시 던질 때 사용됩니다.")])]),a._v(" "),t("h2",{attrs:{id:"_93-dart에서-optional-parameters와-named-parameters의-차이점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_93-dart에서-optional-parameters와-named-parameters의-차이점은-무엇인가요"}},[a._v("#")]),a._v(" 93. Dart에서 "),t("code",[a._v("Optional parameters")]),a._v("와 "),t("code",[a._v("Named parameters")]),a._v("의 차이점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("Optional parameters")]),a._v("는 함수의 매개변수를 선택적으로 받을 수 있게 해주는 방식입니다.")]),a._v(" "),t("li",[t("code",[a._v("Named parameters")]),a._v("는 매개변수를 이름을 통해 전달할 수 있게 해줍니다.")])]),a._v(" "),t("h2",{attrs:{id:"_94-dart에서-this-키워드의-용도는-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_94-dart에서-this-키워드의-용도는-무엇인가요"}},[a._v("#")]),a._v(" 94. Dart에서 "),t("code",[a._v("this")]),a._v(" 키워드의 용도는 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("this")]),a._v(" 키워드는 현재 객체의 인스턴스를 참조하는 데 사용됩니다. 클래스 내에서 다른 멤버 변수나 메서드에 접근할 때 사용됩니다.")])]),a._v(" "),t("h2",{attrs:{id:"_95-dart에서-const-생성자의-사용-이유는-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_95-dart에서-const-생성자의-사용-이유는-무엇인가요"}},[a._v("#")]),a._v(" 95. Dart에서 "),t("code",[a._v("const")]),a._v(" 생성자의 사용 이유는 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("const")]),a._v(" 생성자는 객체를 컴파일 타임에 미리 생성할 수 있게 해줍니다. 이를 통해 효율적인 메모리 사용이 가능하고, 불변 객체를 생성하는 데 유용합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_96-dart에서-throw와-throw-는-같은-의미인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_96-dart에서-throw와-throw-는-같은-의미인가요"}},[a._v("#")]),a._v(" 96. Dart에서 "),t("code",[a._v("throw")]),a._v("와 "),t("code",[a._v("throw()")]),a._v("는 같은 의미인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("throw")]),a._v("는 예외를 던지는 키워드이며, "),t("code",[a._v("throw()")]),a._v("는 "),t("code",[a._v("throw")]),a._v(" 키워드 뒤에 예외를 던지는 방식으로, 문법적 차이만 있습니다. "),t("code",[a._v("throw()")]),a._v("는 올바르지 않으며, "),t("code",[a._v("throw")]),a._v("를 사용해야 합니다.")])]),a._v(" "),t("h2",{attrs:{id:"_97-dart에서-await을-사용할-때-중요한-점은-무엇인가요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_97-dart에서-await을-사용할-때-중요한-점은-무엇인가요"}},[a._v("#")]),a._v(" 97. Dart에서 "),t("code",[a._v("await")]),a._v("을 사용할 때 중요한 점은 무엇인가요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("await")]),a._v("은 비동기 작업이 완료될 때까지 기다리며, 비동기 함수 내에서만 사용 가능합니다. "),t("code",[a._v("await")]),a._v("은 "),t("code",[a._v("Future")]),a._v(" 객체에만 사용할 수 있습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_98-dart에서-set에-중복된-값을-추가하려고-할-때-어떻게-되나요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_98-dart에서-set에-중복된-값을-추가하려고-할-때-어떻게-되나요"}},[a._v("#")]),a._v(" 98. Dart에서 "),t("code",[a._v("Set")]),a._v("에 중복된 값을 추가하려고 할 때 어떻게 되나요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("Set")]),a._v("은 중복을 허용하지 않기 때문에 중복된 값을 추가하려고 하면 값이 추가되지 않습니다.")])]),a._v(" "),t("h2",{attrs:{id:"_99-dart에서-list의-addall-메서드는-무엇을-하나요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_99-dart에서-list의-addall-메서드는-무엇을-하나요"}},[a._v("#")]),a._v(" 99. Dart에서 "),t("code",[a._v("List")]),a._v("의 "),t("code",[a._v("addAll")]),a._v(" 메서드는 무엇을 하나요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("addAll")]),a._v("은 다른 컬렉션의 모든 요소를 현재 "),t("code",[a._v("List")]),a._v("에 추가하는 메서드입니다.")])]),a._v(" "),t("h2",{attrs:{id:"_100-dart에서-연산자는-무엇을-의미하나요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_100-dart에서-연산자는-무엇을-의미하나요"}},[a._v("#")]),a._v(" 100. Dart에서 "),t("code",[a._v("!")]),a._v(" 연산자는 무엇을 의미하나요?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("!")]),a._v("는 null 안전성을 무시하고 해당 값이 "),t("code",[a._v("null")]),a._v("이 아님을 보장하는 연산자입니다. 이를 사용하면 "),t("code",[a._v("null")]),a._v(" 값을 허용하지 않는 변수에 대해 강제로 값을 처리할 수 있습니다.")])])],1)}),[],!1,null,null,null);t.default=v.exports}}]);